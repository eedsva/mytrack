 Find minimum # elements to be removed from int array so that max element is <= 2x of min element

For given array a of size n we create a set of a[i] , a[a[i]] , a[a[a[i]]] ….. i varies from 0 to n-1 , find the max size of such set.

: Find min element at given level in binary tree
Design multiple stacks in a Single one big int array as efficient as possible ( real world example multiple process function stacks creation and deletion in memory of linux os )

Design in-memory file system.

A robot standing at top left corner of a grid, it can only move in right or bottom direction , determine total number of possible paths are their to reach bottom right corner.

Given an array of integers and a number x, find the smallest subarray with sum greater than the given value.

Examples:
arr[] = {1, 4, 45, 6, 0, 19}
   x  =  51
Output: 3
Minimum length subarray is {4, 45, 6}

Create a matrix with alternating rectangles of O and X
Write a code which inputs two numbers m and n and creates a matrix of size m x n (m rows and n columns) in which every elements is either X or 0. The Xs and 0s must be filled alternatively, the matrix should have outermost rectangle of Xs, then a rectangle of 0s, then a rectangle of Xs, and so on.

Examples:

Input: m = 3, n = 3
Output: Following matrix 
X X X
X 0 X
X X X

Given a string of parenthesis, write a function if it is balanced.

Find the number of occurrences of words in a paragraph.

 Difference between Dijkstra and BFS.

If you have two eggs, how many max steps you need to find the floor, from which the eggs break.

2. Is a heap a complete binary tree?
3. Asked What is hashmap.
     a. What happens when two numbers map to same key?
     b. how does chaining work?
     c. What to do when you have a bad hashing function, and only we can modify the structure of hashmap not hashing function?
     d. What do to when you your hashmap is filled completely (as in all the linked list are filled up to their capacity)



1. What is quicksort?
     a. What is complexity when all elements are sorted and how can you improve it? (Randomization)
     b. Will randomization work when elements are same?
     c. What algorithms sort equal elements in O(n) time ?
     d. using the information, how can you improve quick-sort? Think about it, its good. Don’t want to spoil it for you by writing answer here.
     e. implement this modification.

2. Given two river banks (visualization : two parallel lines), one bank has numbers written (1….n) in sorted order. On the other bank the numbers (1…n) are arranged randomly. A bridge can be formed from the ith point from bank 1 to ith point in bank 2. Find the max number of non-intersecting bridges you can form?

3. Given 1…n , and given some statements like i hates j, then find some arrangement of n numbers such that if i hates j then in the arrangement i comes before j. Say 1 hates 2, then 123456789 is acceptable but 213456789 is not.

4. Asked about internet. What happens when you type a URL on your browser?

3. Implement a calculator which takes a maths expression and evaluates it and prints the result.
4. Given statements like A is connected to B. D is connected to E. And transitive connections are allowed. Write a code which takes input such connected statements and and two numbers i and j and returns true if i and j are connected (can be transitively), and false if not connected.
